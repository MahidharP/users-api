{"version":3,"sources":["actions/usersAction.js","components/Dashboard.js","App.js","reducers/usersReducer.js","index.js","store/configureStore.js"],"names":["userSearch","user","type","payload","searchFilterUser","search","dispatch","axios","get","then","response","users","data","catch","err","alert","message","TableRows","props","id","name","username","email","address","city","Dashboard","useState","searchUser","setSearchUser","searchCity","setSearchCity","sortOrder","setSortOrder","useSelector","state","useDispatch","useEffect","setUsers","handleSort","sortBy","newState","order","startSortUsers","className","length","value","onChange","e","result","target","placeholder","dropDownList","map","Table","responsive","hover","striped","onClick","App","initialUser","usersReducer","action","store","createStore","combineReducers","applyMiddleware","thunk","configureStore","console","log","getState","subscribe","ReactDOM","render","StrictMode","Container","document","getElementById"],"mappings":"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","file":"static/js/main.f0d2f0c8.chunk.js","sourcesContent":["import axios from 'axios'\n\nconst setUsers = (users) => {\n    return {\n        type: 'SET_USERS',\n        payload: users\n    }\n}\n\nconst userSearch = (user) => {\n    return {\n        type: 'SEARCH_USER',\n        payload: user\n    }\n}\n\nexport const startGetUsers = () => {\n    return (dispatch) => {\n        axios.get('/users')\n            .then((response) => {\n                const users = response.data\n                dispatch(setUsers(users))\n            })\n            .catch((err) => {\n                alert(err.message)\n            })\n    }\n}\n\nexport const searchFilterUser = (search) => {\n    return (dispatch) => {\n        axios.get(`/users/filter?search=${search}`)\n            .then((response) => {\n                const users = response.data\n                dispatch(userSearch(users))\n            })\n            .catch((err) => {\n                alert(err.message)\n            })\n    }\n}\n\n\n\nexport const startSortUsers = (sortBy, order) => {\n    return (dispatch) => {\n        axios.get(`/users/sort?sortBy=${sortBy}&order=${order}`)\n            .then((response) => {\n                const users = response.data\n                dispatch(userSearch(users))\n            })\n            .catch((err) => {\n                alert(err.message)\n            })\n    }\n}\n","import React, { useEffect, useState } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { startGetUsers, searchFilterUser, startSortUsers } from '../actions/usersAction'\nimport { Table } from '../../node_modules/react-bootstrap';\n\nconst Dashboard = () => {\n    const [searchUser, setSearchUser] = useState('')\n    const [searchCity, setSearchCity] = useState('')\n    const [sortOrder, setSortOrder] = useState({\n        name: true,\n        email: true,\n        city: true,\n        username: true\n    })\n\n    const users = useSelector((state) => {\n        return state.users\n    })\n\n    const dispatch = useDispatch()\n\n    useEffect(() => {\n        dispatch(startGetUsers())\n    }, [dispatch])\n\n    const handleUserChange = (e) => {\n        const result = e.target.value\n        setSearchUser(result)\n        dispatch(searchFilterUser(result))\n    }\n\n    const handleSearchCity = (e) => {\n        const result = e.target.value\n        setSearchCity(result)\n        dispatch(searchFilterUser(result))\n    }\n\n    const handleSort = (sortBy) => {\n        const newState = { ...sortOrder, [sortBy]: !sortOrder[sortBy] }\n        setSortOrder(newState)\n        dispatch(startSortUsers(sortBy, !sortOrder[sortBy] ? 'asc' : 'desc'))\n    }\n\n\n    return (\n        <div className=\"divDashboard\">\n            <h2 className=\"h2Dashboard\"> Users Count : {users.users.length}</h2>\n            <input type=\"text\" value={searchUser} className=\"searchByName\" onChange={handleUserChange} placeholder=\"Search...\" />\n            <select value={searchCity} onChange={handleSearchCity} className=\"dropDownList\">\n                <option value=\"\"> Select City  </option>\n                {\n                    users.dropDownList.map((user) => {\n                        return <option value={user.address.city} key={user.id}> {user.address.city} </option>\n                    })\n                }\n            </select>\n            <Table responsive hover striped>\n                <thead>\n                    <tr>\n                        <th> Id <i className=\"sort icon\" onClick={(e) => {\n                            handleSort('id')\n                        }}></i></th>\n                        <th> Name <i className=\"sort icon\" onClick={(e) => {\n                            handleSort('name')\n                        }}></i></th>\n                        <th> Username <i className=\"sort icon\" onClick={(e) => {\n                            handleSort('username')\n                        }}></i></th>\n                        <th> Email <i className=\"sort icon\" onClick={(e) => {\n                            handleSort('email')\n                        }}></i></th>\n                        <th> City <i className=\"sort icon\" onClick={(e) => {\n                            handleSort('address.city')\n                        }}></i></th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {\n                        users.users.map((user) => {\n                            return <TableRows key={user.id} user={user} />\n                        })\n                    }\n                </tbody>\n            </Table>\n        </div>\n    )\n}\n\nconst TableRows = (props) => {\n    const { user } = props\n    return (\n        <tr key={user.id}>\n            <td> {user.id} </td>\n            <td> {user.name} </td>\n            <td> {user.username} </td>\n            <td> {user.email} </td>\n            <td> {user.address.city} </td>\n        </tr>\n    )\n}\n\nexport default Dashboard\n","import React from 'react'\nimport Dashboard from './components/Dashboard';\n\n\nconst App = () => {\n\n  return (\n    <div>\n      <Dashboard />\n    </div>\n  )\n}\n\nexport default App;\n","const initialUser = {\n    users: [],\n    dropDownList: []\n}\n\nconst usersReducer = (state = initialUser, action) => {\n    switch (action.type) {\n        case 'SET_USERS': {\n            return {\n                ...state,\n                users: [...action.payload],\n                dropDownList: [...action.payload]\n            }\n        }\n        case 'SEARCH_USER': {\n            return {\n                ...state,\n                users: [...action.payload]\n            }\n        }\n        default: {\n            return { ...state }\n        }\n    }\n}\n\nexport default usersReducer","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport './customs.css'\nimport 'semantic-ui-css/semantic.min.css'  \nimport { Container } from 'react-bootstrap'\nimport configureStore from './store/configureStore'\nimport { Provider } from 'react-redux'\n\nconst store = configureStore()\n\nconsole.log('Store Value', store.getState())\n\nstore.subscribe(() => {\n  console.log('Updated State', store.getState())\n})\n\nReactDOM.render(\n  <React.StrictMode>\n    <Container>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </Container>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","import { createStore, combineReducers, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport usersReducer from '../reducers/usersReducer'\n\nconst configureStore = () => {\n    const store = createStore(combineReducers({\n        users: usersReducer\n    }), applyMiddleware(thunk))\n    return store\n}\n\nexport default configureStore"],"sourceRoot":""}