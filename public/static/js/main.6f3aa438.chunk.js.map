{"version":3,"sources":["actions/usersAction.js","components/Dashboard.js","App.js","reducers/usersReducer.js","index.js","store/configureStore.js"],"names":["userSearch","user","type","payload","searchFilterUser","search","dispatch","axios","get","then","response","users","data","catch","err","alert","message","Dashboard","useState","searchUser","setSearchUser","searchCity","setSearchCity","name","email","city","username","sortOrder","setSortOrder","useSelector","state","useDispatch","useEffect","setUsers","handleSort","sortBy","newState","order","startSortUsers","length","value","className","onChange","e","result","target","placeholder","dropDownList","map","address","id","Table","responsive","hover","data-toggle","class","onClick","App","initialUser","usersReducer","action","store","createStore","combineReducers","applyMiddleware","thunk","configureStore","console","log","getState","subscribe","ReactDOM","render","StrictMode","Container","document","getElementById"],"mappings":"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","file":"static/js/main.6f3aa438.chunk.js","sourcesContent":["import axios from 'axios'\n\nconst setUsers = (users) => {\n    return {\n        type: 'SET_USERS',\n        payload: users\n    }\n}\n\nconst userSearch = (user) => {\n    return {\n        type: 'SEARCH_USER',\n        payload: user\n    }\n}\n\nconst cityFilter = (user) => {\n    return {\n        type: 'CITY_FILTER',\n        payload: user\n    }\n}\n\nconst sortingAsc = (users) => {\n    return {\n        type: 'SORT_ASC',\n        payload: users\n    }\n}\n\nexport const startGetUsers = () => {\n    return (dispatch) => {\n        axios.get('/users')\n            .then((response) => {\n                const users = response.data\n                dispatch(setUsers(users))\n            })\n            .catch((err) => {\n                alert(err.message)\n            })\n    }\n}\n\nexport const searchFilterUser = (search) => {\n    return (dispatch) => {\n        axios.get(`/users/filter?search=${search}`)\n            .then((response) => {\n                const users = response.data\n                dispatch(userSearch(users))\n            })\n            .catch((err) => {\n                alert(err.message)\n            })\n    }\n}\n\n\n\nexport const startSortUsers = (sortBy, order) => {\n    return (dispatch) => {\n        axios.get(`/users/sort?sortBy=${sortBy}&order=${order}`)\n            .then((response) => {\n                const users = response.data\n                dispatch(userSearch(users))\n            })\n            .catch((err) => {\n                alert(err.message)\n            })\n    }\n}\n","import React, { useEffect, useState } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { startGetUsers, searchFilterUser, filterCity, startSortUsers } from '../actions/usersAction'\nimport { Table } from '../../node_modules/react-bootstrap';\n\nconst Dashboard = () => {\n    const [searchUser, setSearchUser] = useState('')\n    const [searchCity, setSearchCity] = useState('')\n    const [sortOrder, setSortOrder] = useState({\n        name: true,\n        email: true,\n        city: true,\n        username: true\n    })\n    const [toggle, setToggle] = useState(false)\n\n    const users = useSelector((state) => {\n        return state.users\n    })\n\n    const dispatch = useDispatch()\n\n    useEffect(() => {\n        dispatch(startGetUsers())\n    }, [dispatch])\n\n    const handleUserChange = (e) => {\n        const result = e.target.value\n        setSearchUser(result)\n        dispatch(searchFilterUser(result))\n    }\n\n    const handleSearchCity = (e) => {\n        const result = e.target.value\n        setSearchCity(result)\n        dispatch(searchFilterUser(result))\n    }\n\n    const handleSort = (sortBy) => {\n        const newState = { ...sortOrder, [sortBy]: !sortOrder[sortBy] }\n        setSortOrder(newState)\n        dispatch(startSortUsers(sortBy, !sortOrder[sortBy] ? 'asc' : 'desc'))\n    }\n\n\n    return (\n        <div>\n            <h3> Users Count : - {users.users.length}</h3>\n            <input type=\"text\" value={searchUser} className=\"searchByName\" onChange={handleUserChange} placeholder=\"Search...\" />\n            <select value={searchCity} onChange={handleSearchCity} className=\"dropDownList\">\n                <option value=\"\"> Select City  </option>\n                {\n                    users.dropDownList.map((user) => {\n                        return <option value={user.address.city} key={user.id}> {user.address.city} </option>\n                    })\n                }\n            </select>\n            <Table responsive hover data-toggle=\"table\">\n                <thead>\n                    <tr>\n                        <th> Name <i class=\"sort icon\" onClick={(e) => {\n                            handleSort('name')\n                        }}></i></th>\n                        <th> Username <i class=\"sort icon\" onClick={(e) => {\n                            handleSort('username')\n                        }}></i></th>\n                        <th> Email <i class=\"sort icon\" onClick={(e) => {\n                            handleSort('email')\n                        }}></i></th>\n                        <th> City <i class=\"sort icon\" onClick={(e) => {\n                            handleSort('address.city')\n                        }}></i></th>\n\n\n                    </tr>\n                </thead>\n                <tbody>\n                    {\n                        users.users.map((user) => {\n                            return (\n                                <tr key={user.id}>\n                                    <td> {user.name} </td>\n                                    <td> {user.username} </td>\n                                    <td> {user.email} </td>\n                                    <td> {user.address.city} </td>\n                                </tr>\n                            )\n                        })\n                    }\n                </tbody>\n            </Table>\n        </div>\n    )\n}\n\nexport default Dashboard\n","import React from 'react'\nimport Dashboard from './components/Dashboard';\n\n\nconst App = () => {\n\n  return (\n    <div>\n      <Dashboard />\n    </div>\n  )\n}\n\nexport default App;\n","const initialUser = {\n    users: [],\n    dropDownList: []\n}\n\nconst usersReducer = (state = initialUser, action) => {\n    switch (action.type) {\n        case 'SET_USERS': {\n            return {\n                ...state,\n                users: [...action.payload],\n                dropDownList: [...action.payload]\n            }\n        }\n        case 'SEARCH_USER': {\n            return {\n                ...state,\n                users: [...action.payload]\n            }\n        }\n        case 'CITY_FILTER': {\n            return {\n                ...state,\n                users: [...action.payload]\n            }\n        }\n        case 'SORT_ASC': {\n            return {\n                ...state,\n                users: [...action.payload]\n            }\n        }\n        default: {\n            return { ...state }\n        }\n    }\n}\n\nexport default usersReducer","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport './customs.css'\nimport 'semantic-ui-css/semantic.min.css'  \nimport { Container } from 'react-bootstrap'\nimport configureStore from './store/configureStore'\nimport { Provider } from 'react-redux'\n\nconst store = configureStore()\n\nconsole.log('Store Value', store.getState())\n\nstore.subscribe(() => {\n  console.log('Updated State', store.getState())\n})\n\nReactDOM.render(\n  <React.StrictMode>\n    <Container>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </Container>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","import { createStore, combineReducers, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport usersReducer from '../reducers/usersReducer'\n\nconst configureStore = () => {\n    const store = createStore(combineReducers({\n        users: usersReducer\n    }), applyMiddleware(thunk))\n    return store\n}\n\nexport default configureStore"],"sourceRoot":""}